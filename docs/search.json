[
  {
    "objectID": "assignment27.html",
    "href": "assignment27.html",
    "title": "assignment27",
    "section": "",
    "text": "# Load required libraries\nlibrary(osmdata)\n\nData (c) OpenStreetMap contributors, ODbL 1.0. https://www.openstreetmap.org/copyright\n\nlibrary(sf)\n\nLinking to GEOS 3.13.1, GDAL 3.10.2, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(terra)\n\nterra 1.8.42\n\nlibrary(raster)\n\nLoading required package: sp\n\n\n\nAttaching package: 'raster'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nlibrary(ggplot2)\n\nfc &lt;- st_as_sf(st_sfc(\n  st_polygon(list(rbind(\n    c(-105.15, 40.50),\n    c(-105.15, 40.65),\n    c(-104.95, 40.65),\n    c(-104.95, 40.50),\n    c(-105.15, 40.50)\n  ))),\n  crs = 4326\n))\n\nfoco_rivers &lt;- opq(bbox = st_bbox(fc)) |&gt;\n  add_osm_feature(key = \"waterway\") |&gt;\n  osmdata_sf()\n\nplot(st_geometry(fc), border = \"black\")\nif (!is.null(foco_rivers$osm_lines)) {\n  plot(foco_rivers$osm_lines$geometry, add = TRUE, col = \"blue\")\n} else {\n  warning(\"no lines returned\")\n}\n\n\n\n\n\n\n\n\n\nif (!is.null(foco_rivers$osm_lines)) {\n  osm_lines &lt;- foco_rivers$osm_lines\n\n  if (is.list(osm_lines$name)) {\n    osm_lines$name &lt;- sapply(osm_lines$name, function(x) if (is.null(x)) NA else x)\n  }\n\n  poudre_lines &lt;- osm_lines |&gt;\n    filter(name %in% c(\"Cache la Poudre River\", \"Cache La Poudre River\"))\n\n  poudre_river &lt;- poudre_lines |&gt;\n    st_union() |&gt;\n    st_as_sf()\n\n} else {\n  stop(\"No river lines returned from OSM\")\n}\nif (exists(\"poudre_river\")) {\n  river_length &lt;- st_length(poudre_river)\n  print(river_length)\n} else {\n  warning(\"poudre object does not exist\")\n}\n\n205452.4 [m]\n\n\n\nurl &lt;- \"https://raw.githubusercontent.com/mikejohnson51/csu-ess-330/main/resources/foco-elev.tif\"\ndem &lt;- rast(paste0(\"/vsicurl/\", url))\n\nplot(dem, main = \"Fort Collins DEM\")\n\n\n\n\n\n\n\n\n\nif (\"SpatRaster\" %in% class(dem)) {\n  dem_crs &lt;- crs(dem)\n} else if (\"RasterLayer\" %in% class(dem)) {\n  dem_crs &lt;- crs(dem)\n} else {\n  stop(\"DEM is not valid\")\n}\n\nif (exists(\"poudre_river\")) {\n  poudre_river_proj &lt;- st_transform(poudre_river, dem_crs)\n  poudre_pts &lt;- st_cast(poudre_river_proj, \"POINT\")\n} else {\n  warning(\"poudre_river not found\")\n}\n\n\nif (exists(\"poudre_pts\") && exists(\"dem\")) {\n  coords &lt;- st_coordinates(poudre_pts)\n  cell_ids &lt;- cellFromXY(dem, coords)\n  snapped_coords &lt;- xyFromCell(dem, cell_ids)\n  profile &lt;- extract(dem, snapped_coords)[[1]]\n\nprofile_clean &lt;- na.omit(profile)\n\nplot(profile_clean, type = \"l\",\n     main = \"Elevation Profile\",\n     ylab = \"Elevation (m)\", xlab = \"River Point Index\",\n     xlim = c(1, length(profile_clean)))\n\n  head(profile)\n} else {\n  warning(\"Missing poudre_pts or dem for extraction.\")\n}\n\n\n\n\n\n\n\n\n[1] NA NA NA NA NA NA\n\n\n\nif (exists(\"poudre_pts\") && exists(\"dem\")) {\n\n  if (\"SpatRaster\" %in% class(dem)) {\n    dem_crs &lt;- terra::crs(dem)\n  } else if (\"RasterLayer\" %in% class(dem)) {\n    dem_crs &lt;- raster::crs(dem)\n  } else {\n    stop(\"not valid raster type\")\n  }\n\n  poudre_pts_proj &lt;- st_transform(poudre_pts, crs = dem_crs)\n\n} else {\n  warning(\"Missing data\")\n}\n\n\nif (exists(\"poudre_pts\") && exists(\"profile\")) {\nriver_profile &lt;- bind_cols(poudre_pts_proj, elevation = profile)\n\n  river_profile &lt;- mutate(river_profile, ID = 1:nrow(river_profile))\n\n  head(river_profile)\n} else {\n  warning(\"Missing data\")\n}\n\nSimple feature collection with 6 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -823445.8 ymin: 1977087 xmax: -823406 ymax: 1977161\nProjected CRS: unnamed\n  elevation                         x ID\n1        NA POINT (-823442.1 1977087)  1\n2        NA POINT (-823434.7 1977094)  2\n3        NA POINT (-823445.8 1977106)  3\n4        NA   POINT (-823442 1977122)  4\n5        NA POINT (-823419.7 1977143)  5\n6        NA   POINT (-823406 1977161)  6\n\n\n\nif (exists(\"river_profile\") && exists(\"river_length\")) {\n  \n  start_point &lt;- river_profile[1, ]\n  end_point   &lt;- river_profile[nrow(river_profile), ]\n  \n  straight_line &lt;- st_distance(start_point, end_point)\n  \n  sinuosity &lt;- as.numeric(river_length / straight_line)\n\n  cat(\"Sinuosity:\", round(sinuosity, 3), \"\\n\")\n  \n} else {\n  warning(\"Missing 'river_profile' or 'river_length'. Cannot compute sinuosity.\")\n}\n\nSinuosity: 2.025 \n\n\n##Because this sinuosity is above 1.5, we know that the river tends to meander a lot. According to the map and my knowledge of the river, this would add up.\n\nif (exists(\"river_profile\") && exists(\"river_length\")) {\n  \n  river_profile_clean &lt;- filter(river_profile, !is.na(elevation))\n\n  if (nrow(river_profile_clean) &gt;= 2) {\n\n    inlet_elev &lt;- river_profile_clean$elevation[1]\n    outlet_elev &lt;- river_profile_clean$elevation[nrow(river_profile_clean)]\n\n    elevation_change_cm &lt;- inlet_elev - outlet_elev\n\n    river_length_m &lt;- units::drop_units(river_length)\n\n    river_length_cm &lt;- river_length_m * 100\n\n    river_slope &lt;- elevation_change_cm / river_length_cm\n\n    cat(\"River slope:\", round(river_slope, 4), \"\\n\")\n    cat(\"slope:\", round(river_slope * 100, 2), \"%.\\n\")\n\n  } else {\n    warning(\"Not enough points\")\n  }\n\n} else {\n  warning(\"Missing data for slope\")\n}\n\nRiver slope: 5e-04 \nslope: 0.05 %.\n\n\n##The riverâ€™s slope is 0.05%, which means it drops ~50 cm per km.\n\nriver_profile_clean &lt;- river_profile |&gt; dplyr::filter(!is.na(elevation))\n\nggplot(river_profile_clean, aes(x = ID, y = elevation)) +\n  geom_line(color = \"steelblue\", linewidth = 1) +\n  labs(\n    title = \"Elevation Profile Along the Poudre River\",\n    x = \"River Point ID\",\n    y = \"Elevation (cm)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nggplot(river_profile_clean) +\n  geom_sf(aes(color = elevation), size = 0.5) +\n  scale_color_viridis_c(option = \"plasma\", name = \"Elevation (cm)\") +\n  labs(\n    title = \"Poudre River Profile (Colored by Elevation)\",\n    x = \"Longitude\", y = \"Latitude\"\n  ) +\n  theme_minimal()"
  }
]